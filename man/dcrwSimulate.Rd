% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Filter.R
\name{dcrwSimulate}
\alias{dcrwSimulate}
\title{Regressive bridge sampler}
\usage{
dcrwSimulate(fit, fixed = rep(c(TRUE, FALSE, TRUE), c(1, nrow(fit$predicted) -
  2, 1)), fixed.err = NULL, point.check = function(tm, lon, lat) TRUE,
  delta0 = c(0, 0))
}
\arguments{
\item{fit}{an object returned by \code{dcrw}}

\item{fixed}{a logical vector indicating which locations in the
template path are to be held fixed.}

\item{fixed.err}{The covariance matrix for fixed points.}

\item{point.check}{function that accepts a time, longitude and
latitude and returns boolean indicating whether the state is
acceptable.}

\item{delta0}{initial increment}
}
\value{
a dataframe representing the simulated track
  \item{\code{date}}{prediction times as POSIXct.}
  \item{\code{lon}}{predicted longitude}
  \item{\code{lat}}{predicted latitude}
}
\description{
Generate new tracks from a fitted DCRW model
}
\details{
Given a fitted dcrw model this function generates a new track of
the same length that coincides with the fitted track at the start
point and optionally other specified points along the estimated
track.

Locations from the fitted track can be marked as fixed with the
\code{fixed} argument. In the current implementation the first
location must always be fixed.  The \code{fixed.err} parameter
specifies the covariance of the error in the fixed points. If this
parameter is \code{NULL}, the covariance defaults to the
innovation covariance \code{Q} returned by \code{dcrwModel}.

Additional constraints can be placed on the path by rejection
sampling through the function \code{point.check}.  This function
must accept a time, longitude and latitude and return a boolean
indicating whether the point is acceptable.  For example, the
track can be constrained to the ocean by supplying a
\code{point.check} function that compares the state to a land mask
and returns \code{FALSE} for locations on land.

Tracks are simulated in the plane.  There is is no polar
correction and without a suitable \code{point.check} function,
there is nothing prevent the track extending outside the [-90,90]
latitudinal limits.
}
